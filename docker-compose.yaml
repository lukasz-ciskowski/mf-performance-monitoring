version: "3.8"

services:
    init:
        image: &tempoImage grafana/tempo:latest
        user: root
        entrypoint:
        - "chown"
        - "10001:10001"
        - "/var/tempo"
        volumes:
        - ./tmp/tempo/data:/var/tempo

    tempo:
        image: *tempoImage
        command: [ "-config.file=/etc/tempo.yaml" ]
        volumes:
        - ./instrumentation/tempo/tempo.yaml:/etc/tempo.yaml
        - ./tmp/tempo/data:/var/tempo
        ports:
        - "3200:3200" # tempo
        - "4183:4317" # otlp grpc
        depends_on:
        - init
        - memcached

    memcached:
        image: memcached:1.6.29
        container_name: memcached
        ports:
        - "11211:11211"
        environment:
        - MEMCACHED_MAX_MEMORY=64m
        - MEMCACHED_THREADS=4

    loki:
        image: grafana/loki:latest
        ports:
        - "3100:3100"
        command: -config.file=/etc/loki/local-config.yaml

    # alloy:
    #     image: grafana/alloy:latest
    #     ports:
    #     - "12345:12345"
    #     - "8027:8027"
    #     - "4317:4317"
    #     volumes:
    #     - "./instrumentation/alloy/config.alloy:/etc/alloy/config.alloy"
    #     command: [
    #         "run",
    #         "--server.http.listen-addr=0.0.0.0:12345",
    #         "--stability.level=public-preview",
    #         "/etc/alloy/config.alloy",
    #     ]

    # blackbox-exporter:
    #     image: prom/blackbox-exporter:latest
    #     container_name: blackbox-exporter
    #     ports:
    #     - "9115:9115"
    #     command:
    #     - --config.file=/etc/blackbox/blackbox.yml
    #     volumes:
    #     - ./instrumentation/blackbox/blackbox.yml:/etc/blackbox/blackbox.yml
    #     restart: unless-stopped

    # single-spa-react:
    #     build:
    #         context: ./single-spa-react
    #         dockerfile: Dockerfile
    #     ports:
    #     - "4000:4000"
    #     volumes:
    #     - ./single-spa-react:/app
    #     - node_modules:/app/node_modules
    #     restart: unless-stopped

    # jaeger-all-in-one:
    #     image: jaegertracing/all-in-one:latest
    #     restart: always
    #     ports:
    #     - "16686:16686"
    #     - "14268"
    #     - "14250"


    prometheus:
        image: prom/prometheus:latest
        volumes:
        - "./instrumentation/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
        ports:
        - 9090:9090

    grafana:
        image: grafana/grafana:latest
        ports:
        - "3000:3000"
        volumes:
        - ./tmp/grafana/data:/var/lib/grafana
        - ./instrumentation/grafana/provisioning:/etc/grafana/provisioning
        - ./instrumentation/grafana/dashboards:/var/lib/grafana/dashboards
        restart: unless-stopped

    zipkin-all-in-one:
        image: openzipkin/zipkin:latest
        restart: always
        ports:
        - "9411:9411"

    otel-collector:
        image: otel/opentelemetry-collector-contrib:latest
        restart: always
        command: ["--config=/etc/otelcol-config.yml"]
        volumes:
        - ./instrumentation/otel/otelcol-config.yml:/etc/otelcol-config.yml
        ports:
        - "1888:1888"   # pprof extension
        - "8888:8888"   # Prometheus metrics exposed by the collector
        - "8889:8889"   # Prometheus exporter metrics
        - "13133:13133" # health_check extension
        - "4317:4317"   # OTLP gRPC receiver
        - "4318:4318"   # OTLP HTTP receiver
        - "55679:55679" # zpages extension
        depends_on:
        # - jaeger-all-in-one
        - zipkin-all-in-one
        - prometheus

