receivers:
    otlp:
        protocols:
            grpc:
                endpoint: 0.0.0.0:4317
            http:
                endpoint: 0.0.0.0:4318
                cors:
                    allowed_origins:
                        - http://*
                        - https://*

connectors:
  servicegraph:
    dimensions:
      - db.system
    virtual_node_extra_label: true
  spanmetrics:
    histogram:
      explicit:
        buckets: [100us, 1ms, 2ms, 6ms, 10ms, 100ms, 250ms]
    dimensions:
      - name: http.method
        default: GET
      - name: http.status_code
      - name: host.name
    exemplars:
      enabled: true
    dimensions_cache_size: 1000
    aggregation_temporality: "AGGREGATION_TEMPORALITY_CUMULATIVE"
    metrics_flush_interval: 15s
    metrics_expiration: 5m
    events:
      enabled: true
      dimensions:
        - name: exception.type
        - name: exception.message
    resource_metrics_key_attributes:
      - service.name
      - telemetry.sdk.language
      - telemetry.sdk.name

exporters:
  prometheus:
    endpoint: "0.0.0.0:8889"

  prometheus/servicegraph:
    endpoint: "0.0.0.0:9090"
    namespace: servicegraph

  zipkin:
    endpoint: "http://zipkin-all-in-one:9411/api/v2/spans"
    format: proto

  otlphttp/logs:
    endpoint: http://loki:3100/otlp
    tls:
      insecure: true

  otlphttp/traces:
    endpoint: http://tempo:4183
    tls:
      insecure: true

  otlp:
    endpoint: otelcol:4317

#   jaeger:
#     endpoint: "jaeger-all-in-one:14250"
#     tls:
#       insecure: true

processors:
  batch:

extensions:
  health_check:
  pprof:
    endpoint: :1888
  zpages:
    endpoint: :55679

service:
  extensions: [pprof, zpages, health_check]
  pipelines:
    traces:
      receivers: [otlp]
      exporters: [zipkin, otlphttp/traces, spanmetrics, servicegraph]
      processors: [batch]
    metrics:
      receivers: [otlp, spanmetrics, servicegraph]
      exporters: [prometheus,prometheus/servicegraph]
      processors: [batch]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlphttp/logs]
