prometheus.remote_write "metrics_write" {
    endpoint {
        name = "default"
        url  = "http://prometheus:9090/api/v1/write"
        queue_config { }
        metadata_config { }
    }
}

loki.process "logs_process_client" {
    forward_to = [loki.write.logs_write_client.receiver]

    stage.logfmt {
        mapping = { "kind" = "", "service_name" = "", "app" = "" }
    }

    stage.labels {
        values = { "kind" = "kind", "service_name" = "service_name", "app" = "app" }
    }
}

loki.write "logs_write_client" {
    endpoint {
        url = "http://loki:3100/loki/api/v1/push"
    }
}

logging {
    level = "info"
}

faro.receiver "frontend" {
    extra_log_labels = {
        app_name = "",
	}

    server {
        listen_address           = "0.0.0.0"
        listen_port              = 8027
        cors_allowed_origins     = ["http://localhost:4000"]
        max_allowed_payload_size = "10MiB"

        rate_limiting {
            rate = 100
        }
    }

    sourcemaps { }

    output {
        logs   = [loki.process.logs_process_client.receiver]
        traces = [otelcol.exporter.otlp.trace_write.input]
    }
}

otelcol.receiver.otlp "default" {
    grpc {
        include_metadata = true
    }

    output {
        metrics = []
        logs    = []
        traces  = [otelcol.exporter.otlp.trace_write.input]
    }
}

otelcol.exporter.otlp "trace_write" {
    retry_on_failure {
        max_elapsed_time = "1m0s"
    }

    client {
        endpoint = "http://tempo:4317"
    }
}